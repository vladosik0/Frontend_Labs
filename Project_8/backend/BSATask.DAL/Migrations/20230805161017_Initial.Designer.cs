// <auto-generated />
using System;
using BSATask.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSATask.DAL.Migrations
{
    [DbContext(typeof(BSATaskContext))]
    [Migration("20230805161017_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 7,
                            CreatedAt = new DateTime(2022, 8, 21, 18, 27, 25, 703, DateTimeKind.Local).AddTicks(3271),
                            Deadline = new DateTime(2024, 11, 22, 17, 40, 47, 738, DateTimeKind.Local).AddTicks(3867),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Rustic Wooden Chips",
                            TeamId = 10
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 6,
                            CreatedAt = new DateTime(2023, 6, 16, 15, 32, 12, 377, DateTimeKind.Local).AddTicks(1794),
                            Deadline = new DateTime(2025, 6, 6, 3, 43, 9, 668, DateTimeKind.Local).AddTicks(4254),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Sleek Steel Hat",
                            TeamId = 8
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2021, 8, 28, 0, 52, 12, 877, DateTimeKind.Local).AddTicks(4832),
                            Deadline = new DateTime(2024, 5, 1, 10, 6, 51, 582, DateTimeKind.Local).AddTicks(4611),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Name = "Fantastic Frozen Chips",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 7,
                            CreatedAt = new DateTime(2020, 12, 13, 17, 5, 6, 301, DateTimeKind.Local).AddTicks(5663),
                            Deadline = new DateTime(2024, 8, 14, 17, 5, 5, 413, DateTimeKind.Local).AddTicks(4038),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            Name = "Gorgeous Rubber Table",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2022, 11, 27, 4, 56, 47, 722, DateTimeKind.Local).AddTicks(8057),
                            Deadline = new DateTime(2024, 11, 1, 23, 34, 3, 920, DateTimeKind.Local).AddTicks(4845),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Name = "Rustic Plastic Sausages",
                            TeamId = 8
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            CreatedAt = new DateTime(2023, 2, 19, 3, 40, 15, 134, DateTimeKind.Local).AddTicks(6493),
                            Deadline = new DateTime(2025, 1, 22, 15, 0, 14, 236, DateTimeKind.Local).AddTicks(1860),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Incredible Metal Pants",
                            TeamId = 10
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 6,
                            CreatedAt = new DateTime(2022, 10, 10, 9, 39, 15, 538, DateTimeKind.Local).AddTicks(4392),
                            Deadline = new DateTime(2024, 1, 19, 14, 25, 40, 445, DateTimeKind.Local).AddTicks(5221),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Name = "Handcrafted Granite Tuna",
                            TeamId = 10
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2021, 9, 1, 20, 47, 42, 479, DateTimeKind.Local).AddTicks(5366),
                            Deadline = new DateTime(2024, 10, 24, 9, 30, 6, 752, DateTimeKind.Local).AddTicks(1983),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            Name = "Handmade Frozen Chair",
                            TeamId = 10
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            CreatedAt = new DateTime(2021, 3, 21, 5, 54, 5, 260, DateTimeKind.Local).AddTicks(8681),
                            Deadline = new DateTime(2025, 4, 17, 19, 30, 46, 346, DateTimeKind.Local).AddTicks(4547),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Gorgeous Metal Computer",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 9,
                            CreatedAt = new DateTime(2023, 1, 16, 21, 57, 39, 481, DateTimeKind.Local).AddTicks(405),
                            Deadline = new DateTime(2024, 8, 25, 4, 59, 39, 698, DateTimeKind.Local).AddTicks(3171),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Intelligent Cotton Keyboard",
                            TeamId = 7
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 7, 6, 39, 54, 444, DateTimeKind.Local).AddTicks(3528),
                            Description = "Quia provident quas.",
                            FinishedAt = new DateTime(2022, 9, 16, 18, 59, 20, 796, DateTimeKind.Local).AddTicks(4660),
                            Name = "eaque",
                            PerformerId = 3,
                            ProjectId = 8,
                            State = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 7, 2, 19, 20, 39, 505, DateTimeKind.Local).AddTicks(823),
                            Description = "Aut velit velit.",
                            Name = "exercitationem",
                            PerformerId = 3,
                            ProjectId = 8,
                            State = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 9, 5, 7, 8, 49, 530, DateTimeKind.Local).AddTicks(9673),
                            Description = "Minus voluptas eum cupiditate quia qui est.",
                            Name = "molestiae",
                            PerformerId = 5,
                            ProjectId = 9,
                            State = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 9, 30, 2, 57, 59, 274, DateTimeKind.Local).AddTicks(2086),
                            Description = "Est quia consequatur minima harum ut ipsam est architecto unde.",
                            FinishedAt = new DateTime(2023, 1, 10, 6, 58, 4, 482, DateTimeKind.Local).AddTicks(4428),
                            Name = "ea",
                            PerformerId = 8,
                            ProjectId = 10,
                            State = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 2, 6, 13, 27, 19, 405, DateTimeKind.Local).AddTicks(2782),
                            Description = "Libero illo perspiciatis voluptatum dolore praesentium nihil ipsa.",
                            Name = "fugit",
                            PerformerId = 10,
                            ProjectId = 8,
                            State = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 1, 15, 18, 12, 12, 725, DateTimeKind.Local).AddTicks(8891),
                            Description = "Ducimus incidunt saepe ut dolor.",
                            FinishedAt = new DateTime(2023, 6, 1, 20, 6, 29, 83, DateTimeKind.Local).AddTicks(3726),
                            Name = "delectus",
                            PerformerId = 5,
                            ProjectId = 1,
                            State = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 7, 27, 20, 56, 24, 298, DateTimeKind.Local).AddTicks(2155),
                            Description = "Sit aut enim ipsam est.",
                            Name = "qui",
                            PerformerId = 4,
                            ProjectId = 1,
                            State = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 12, 6, 19, 15, 51, 649, DateTimeKind.Local).AddTicks(1308),
                            Description = "Eaque voluptas quia deleniti rerum dolorum accusamus dignissimos vel.",
                            Name = "cupiditate",
                            PerformerId = 10,
                            ProjectId = 4,
                            State = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 4, 3, 20, 44, 0, 209, DateTimeKind.Local).AddTicks(5399),
                            Description = "Et iste dolore.",
                            Name = "est",
                            PerformerId = 5,
                            ProjectId = 8,
                            State = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 6, 13, 7, 48, 52, 894, DateTimeKind.Local).AddTicks(2949),
                            Description = "Laboriosam est eos magni.",
                            Name = "aut",
                            PerformerId = 10,
                            ProjectId = 9,
                            State = 1
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 19, 10, 26, 6, 379, DateTimeKind.Local).AddTicks(1989),
                            Name = "Bartell Group"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 1, 21, 7, 28, 59, 925, DateTimeKind.Local).AddTicks(4939),
                            Name = "Shanahan and Sons"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 13, 20, 33, 35, 686, DateTimeKind.Local).AddTicks(6049),
                            Name = "Gorczany Inc"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 7, 20, 5, 29, 9, 415, DateTimeKind.Local).AddTicks(5391),
                            Name = "Lang, Batz and Sporer"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 6, 8, 9, 25, 46, 756, DateTimeKind.Local).AddTicks(5123),
                            Name = "Jaskolski Group"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 9, 21, 0, 54, 57, 230, DateTimeKind.Local).AddTicks(64),
                            Name = "Heidenreich LLC"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 6, 3, 3, 59, 49, 322, DateTimeKind.Local).AddTicks(1774),
                            Name = "Farrell Inc"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 12, 23, 1, 4, 42, 153, DateTimeKind.Local).AddTicks(3176),
                            Name = "Kiehn, Moore and Skiles"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 3, 27, 9, 19, 57, 804, DateTimeKind.Local).AddTicks(7613),
                            Name = "Johnston - Grady"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 10, 10, 7, 13, 51, 477, DateTimeKind.Local).AddTicks(4128),
                            Name = "Mante, Homenick and Schowalter"
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(1966, 10, 19, 2, 55, 49, 916, DateTimeKind.Unspecified).AddTicks(672),
                            Email = "Lorraine96@hotmail.com",
                            FirstName = "Lorraine",
                            LastName = "Jacobson",
                            RegisteredAt = new DateTime(2023, 1, 30, 11, 44, 13, 976, DateTimeKind.Local).AddTicks(8935),
                            TeamId = 6
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(1924, 4, 30, 19, 15, 55, 975, DateTimeKind.Unspecified).AddTicks(8688),
                            Email = "Katrina65@hotmail.com",
                            FirstName = "Katrina",
                            LastName = "Hickle",
                            RegisteredAt = new DateTime(2022, 11, 13, 21, 29, 3, 590, DateTimeKind.Local).AddTicks(7730),
                            TeamId = 8
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(2005, 7, 14, 16, 56, 39, 935, DateTimeKind.Unspecified).AddTicks(1036),
                            Email = "Joy.Koss@gmail.com",
                            FirstName = "Joy",
                            LastName = "Koss",
                            RegisteredAt = new DateTime(2022, 4, 14, 20, 25, 30, 893, DateTimeKind.Local).AddTicks(4963),
                            TeamId = 5
                        },
                        new
                        {
                            Id = 4,
                            BirthDay = new DateTime(2003, 11, 22, 4, 26, 12, 953, DateTimeKind.Unspecified).AddTicks(8856),
                            Email = "Lori.Ebert@gmail.com",
                            FirstName = "Lori",
                            LastName = "Ebert",
                            RegisteredAt = new DateTime(2023, 2, 10, 19, 1, 18, 487, DateTimeKind.Local).AddTicks(219),
                            TeamId = 7
                        },
                        new
                        {
                            Id = 5,
                            BirthDay = new DateTime(1971, 1, 2, 0, 43, 22, 13, DateTimeKind.Unspecified).AddTicks(944),
                            Email = "Eunice.Volkman@yahoo.com",
                            FirstName = "Eunice",
                            LastName = "Volkman",
                            RegisteredAt = new DateTime(2021, 4, 11, 12, 36, 43, 359, DateTimeKind.Local).AddTicks(5452),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            BirthDay = new DateTime(1996, 3, 27, 6, 10, 46, 67, DateTimeKind.Unspecified).AddTicks(4652),
                            Email = "Alfonso.Stark13@gmail.com",
                            FirstName = "Alfonso",
                            LastName = "Stark",
                            RegisteredAt = new DateTime(2020, 8, 10, 3, 49, 48, 633, DateTimeKind.Local).AddTicks(8816),
                            TeamId = 8
                        },
                        new
                        {
                            Id = 7,
                            BirthDay = new DateTime(1943, 12, 10, 12, 41, 46, 52, DateTimeKind.Unspecified).AddTicks(9635),
                            Email = "Curtis.Nader@yahoo.com",
                            FirstName = "Curtis",
                            LastName = "Nader",
                            RegisteredAt = new DateTime(2020, 11, 1, 22, 2, 6, 515, DateTimeKind.Local).AddTicks(3759),
                            TeamId = 2
                        },
                        new
                        {
                            Id = 8,
                            BirthDay = new DateTime(2006, 9, 1, 19, 58, 59, 227, DateTimeKind.Unspecified).AddTicks(4),
                            Email = "Cedric83@yahoo.com",
                            FirstName = "Cedric",
                            LastName = "Bayer",
                            RegisteredAt = new DateTime(2020, 8, 22, 14, 47, 43, 178, DateTimeKind.Local).AddTicks(994),
                            TeamId = 7
                        },
                        new
                        {
                            Id = 9,
                            BirthDay = new DateTime(1994, 11, 9, 17, 10, 58, 259, DateTimeKind.Unspecified).AddTicks(5512),
                            Email = "Alfred47@yahoo.com",
                            FirstName = "Alfred",
                            LastName = "Ankunding",
                            RegisteredAt = new DateTime(2021, 5, 28, 11, 30, 57, 202, DateTimeKind.Local).AddTicks(7432),
                            TeamId = 7
                        },
                        new
                        {
                            Id = 10,
                            BirthDay = new DateTime(1930, 4, 14, 18, 16, 41, 746, DateTimeKind.Unspecified).AddTicks(6458),
                            Email = "Angelo_Wilkinson@yahoo.com",
                            FirstName = "Angelo",
                            LastName = "Wilkinson",
                            RegisteredAt = new DateTime(2023, 6, 22, 18, 26, 16, 894, DateTimeKind.Local).AddTicks(7337),
                            TeamId = 10
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.User", "Author")
                        .WithMany("Projects")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("BSATask.DAL.Entities.Team", "Team")
                        .WithMany("Projects")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Author");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Task", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.User", "Performer")
                        .WithMany("Tasks")
                        .HasForeignKey("PerformerId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("BSATask.DAL.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Performer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Team", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
