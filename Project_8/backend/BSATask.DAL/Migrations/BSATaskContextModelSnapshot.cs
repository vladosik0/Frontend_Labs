// <auto-generated />
using System;
using BSATask.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSATask.DAL.Migrations
{
    [DbContext(typeof(BSATaskContext))]
    partial class BSATaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2020, 8, 19, 9, 55, 26, 581, DateTimeKind.Local).AddTicks(6236),
                            Deadline = new DateTime(2025, 6, 26, 8, 18, 51, 541, DateTimeKind.Local).AddTicks(5745),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Generic Fresh Ball",
                            TeamId = 6
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2021, 8, 17, 0, 25, 26, 562, DateTimeKind.Local).AddTicks(5687),
                            Deadline = new DateTime(2025, 7, 1, 3, 57, 8, 684, DateTimeKind.Local).AddTicks(485),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Fantastic Concrete Tuna",
                            TeamId = 8
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CreatedAt = new DateTime(2021, 4, 3, 3, 57, 38, 538, DateTimeKind.Local).AddTicks(2341),
                            Deadline = new DateTime(2024, 6, 19, 17, 36, 55, 676, DateTimeKind.Local).AddTicks(1882),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Rustic Wooden Mouse",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 5,
                            CreatedAt = new DateTime(2020, 12, 27, 22, 29, 51, 765, DateTimeKind.Local).AddTicks(8165),
                            Deadline = new DateTime(2024, 8, 21, 20, 24, 12, 473, DateTimeKind.Local).AddTicks(3675),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Name = "Sleek Concrete Table",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 6,
                            CreatedAt = new DateTime(2022, 6, 18, 21, 32, 55, 742, DateTimeKind.Local).AddTicks(6986),
                            Deadline = new DateTime(2024, 11, 12, 5, 29, 13, 964, DateTimeKind.Local).AddTicks(7712),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Name = "Handcrafted Soft Bike",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 9,
                            CreatedAt = new DateTime(2021, 9, 2, 14, 12, 20, 268, DateTimeKind.Local).AddTicks(2015),
                            Deadline = new DateTime(2024, 3, 15, 23, 18, 36, 996, DateTimeKind.Local).AddTicks(7869),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            Name = "Awesome Cotton Cheese",
                            TeamId = 7
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2022, 10, 26, 18, 7, 5, 371, DateTimeKind.Local).AddTicks(8529),
                            Deadline = new DateTime(2024, 9, 16, 11, 39, 57, 549, DateTimeKind.Local).AddTicks(6266),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Name = "Sleek Metal Table",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            CreatedAt = new DateTime(2022, 5, 16, 14, 58, 17, 993, DateTimeKind.Local).AddTicks(8426),
                            Deadline = new DateTime(2023, 10, 25, 13, 27, 29, 4, DateTimeKind.Local).AddTicks(9259),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            Name = "Tasty Metal Keyboard",
                            TeamId = 6
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2022, 4, 6, 8, 25, 38, 175, DateTimeKind.Local).AddTicks(5186),
                            Deadline = new DateTime(2024, 9, 1, 15, 14, 22, 461, DateTimeKind.Local).AddTicks(7958),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Name = "Refined Granite Chicken",
                            TeamId = 7
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 2,
                            CreatedAt = new DateTime(2021, 6, 10, 4, 40, 35, 599, DateTimeKind.Local).AddTicks(8958),
                            Deadline = new DateTime(2024, 5, 18, 0, 9, 41, 672, DateTimeKind.Local).AddTicks(4525),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            Name = "Practical Metal Mouse",
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 30, 6, 46, 34, 105, DateTimeKind.Local).AddTicks(6757),
                            Description = "Aperiam possimus consequatur animi omnis molestiae accusamus fuga dignissimos.",
                            Name = "odio",
                            PerformerId = 7,
                            ProjectId = 5,
                            State = 3
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 27, 6, 40, 55, 788, DateTimeKind.Local).AddTicks(7670),
                            Description = "Dolores consequatur aperiam architecto deleniti corrupti aut provident voluptas.",
                            Name = "vel",
                            PerformerId = 1,
                            ProjectId = 10,
                            State = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 4, 15, 7, 37, 36, 412, DateTimeKind.Local).AddTicks(6215),
                            Description = "Ut rerum est dolorem provident odio fugiat aut eum voluptatem.",
                            Name = "voluptatem",
                            PerformerId = 3,
                            ProjectId = 8,
                            State = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 8, 3, 7, 40, 24, 899, DateTimeKind.Local).AddTicks(9461),
                            Description = "Ex facere veniam.",
                            Name = "omnis",
                            PerformerId = 4,
                            ProjectId = 2,
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 6, 25, 18, 26, 58, 979, DateTimeKind.Local).AddTicks(6302),
                            Description = "Fugit non sit est omnis sit temporibus.",
                            FinishedAt = new DateTime(2023, 3, 6, 17, 3, 22, 677, DateTimeKind.Local).AddTicks(9043),
                            Name = "est",
                            PerformerId = 1,
                            ProjectId = 6,
                            State = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 2, 20, 21, 43, 57, 207, DateTimeKind.Local).AddTicks(4441),
                            Description = "Exercitationem molestiae occaecati.",
                            Name = "consequatur",
                            PerformerId = 1,
                            ProjectId = 4,
                            State = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 2, 14, 20, 22, 1, 985, DateTimeKind.Local).AddTicks(3472),
                            Description = "Repellat aperiam est.",
                            Name = "at",
                            PerformerId = 1,
                            ProjectId = 2,
                            State = 3
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 2, 14, 2, 16, 6, 334, DateTimeKind.Local).AddTicks(6081),
                            Description = "Molestiae nobis similique adipisci.",
                            Name = "cumque",
                            PerformerId = 2,
                            ProjectId = 8,
                            State = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 2, 2, 6, 0, 31, 910, DateTimeKind.Local).AddTicks(763),
                            Description = "Vero ut illum quod eum impedit magnam sunt.",
                            Name = "sapiente",
                            PerformerId = 9,
                            ProjectId = 3,
                            State = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 9, 15, 17, 50, 8, 904, DateTimeKind.Local).AddTicks(2102),
                            Description = "Quo earum dolor rem est sint sit delectus.",
                            Name = "harum",
                            PerformerId = 6,
                            ProjectId = 7,
                            State = 1
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 13, 14, 20, 15, 788, DateTimeKind.Local).AddTicks(3343),
                            Name = "Hintz LLC"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 4, 28, 18, 40, 48, 227, DateTimeKind.Local).AddTicks(759),
                            Name = "Haag, Collins and D'Amore"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 4, 1, 10, 12, 5, 660, DateTimeKind.Local).AddTicks(2792),
                            Name = "VonRueden Inc"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 4, 5, 12, 8, 3, 841, DateTimeKind.Local).AddTicks(999),
                            Name = "Johnson - Schamberger"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 1, 16, 19, 32, 2, 18, DateTimeKind.Local).AddTicks(1221),
                            Name = "Powlowski, Wintheiser and Toy"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 7, 12, 5, 13, 53, 375, DateTimeKind.Local).AddTicks(9931),
                            Name = "Kulas and Sons"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 3, 23, 2, 59, 37, 611, DateTimeKind.Local).AddTicks(4024),
                            Name = "Hayes - Grant"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2020, 12, 15, 11, 39, 53, 704, DateTimeKind.Local).AddTicks(7605),
                            Name = "Keebler - Hills"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 9, 9, 4, 33, 20, 533, DateTimeKind.Local).AddTicks(8463),
                            Name = "DuBuque, Ryan and Schumm"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 10, 5, 2, 51, 45, 462, DateTimeKind.Local).AddTicks(4173),
                            Name = "Frami, Kshlerin and Cremin"
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(1987, 1, 26, 11, 49, 56, 913, DateTimeKind.Unspecified).AddTicks(3656),
                            Email = "Sophia37@hotmail.com",
                            FirstName = "Sophia",
                            LastName = "Glover",
                            RegisteredAt = new DateTime(2022, 4, 6, 14, 27, 54, 459, DateTimeKind.Local).AddTicks(9870),
                            TeamId = 9
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(1998, 4, 11, 10, 37, 38, 753, DateTimeKind.Unspecified).AddTicks(7280),
                            Email = "Sheldon.Cassin41@yahoo.com",
                            FirstName = "Sheldon",
                            LastName = "Cassin",
                            RegisteredAt = new DateTime(2021, 2, 7, 5, 58, 55, 588, DateTimeKind.Local).AddTicks(432),
                            TeamId = 7
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(1971, 7, 14, 11, 37, 31, 29, DateTimeKind.Unspecified).AddTicks(6260),
                            Email = "Patsy.Hahn@yahoo.com",
                            FirstName = "Patsy",
                            LastName = "Hahn",
                            RegisteredAt = new DateTime(2020, 11, 6, 6, 43, 24, 519, DateTimeKind.Local).AddTicks(8415),
                            TeamId = 8
                        },
                        new
                        {
                            Id = 4,
                            BirthDay = new DateTime(1925, 10, 10, 16, 32, 23, 56, DateTimeKind.Unspecified).AddTicks(6945),
                            Email = "Heidi_Roob@yahoo.com",
                            FirstName = "Heidi",
                            LastName = "Roob",
                            RegisteredAt = new DateTime(2021, 11, 10, 9, 57, 17, 676, DateTimeKind.Local).AddTicks(3585),
                            TeamId = 5
                        },
                        new
                        {
                            Id = 5,
                            BirthDay = new DateTime(1956, 7, 19, 10, 45, 8, 421, DateTimeKind.Unspecified).AddTicks(2066),
                            Email = "Cora98@gmail.com",
                            FirstName = "Cora",
                            LastName = "Cormier",
                            RegisteredAt = new DateTime(2022, 8, 19, 15, 20, 2, 429, DateTimeKind.Local).AddTicks(9427),
                            TeamId = 8
                        },
                        new
                        {
                            Id = 6,
                            BirthDay = new DateTime(1952, 7, 23, 15, 38, 17, 301, DateTimeKind.Unspecified).AddTicks(3182),
                            Email = "Glen90@yahoo.com",
                            FirstName = "Glen",
                            LastName = "Lang",
                            RegisteredAt = new DateTime(2021, 12, 2, 23, 46, 15, 530, DateTimeKind.Local).AddTicks(6895),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 7,
                            BirthDay = new DateTime(1953, 11, 2, 5, 38, 31, 385, DateTimeKind.Unspecified).AddTicks(7234),
                            Email = "Charlene.Hane@hotmail.com",
                            FirstName = "Charlene",
                            LastName = "Hane",
                            RegisteredAt = new DateTime(2022, 4, 15, 16, 37, 42, 615, DateTimeKind.Local).AddTicks(2835),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 8,
                            BirthDay = new DateTime(1929, 5, 7, 3, 30, 12, 496, DateTimeKind.Unspecified).AddTicks(2365),
                            Email = "Jennie_Stoltenberg24@yahoo.com",
                            FirstName = "Jennie",
                            LastName = "Stoltenberg",
                            RegisteredAt = new DateTime(2020, 12, 11, 15, 55, 46, 868, DateTimeKind.Local).AddTicks(7366),
                            TeamId = 6
                        },
                        new
                        {
                            Id = 9,
                            BirthDay = new DateTime(1943, 10, 24, 11, 13, 50, 826, DateTimeKind.Unspecified).AddTicks(9222),
                            Email = "Kathryn_Cormier@yahoo.com",
                            FirstName = "Kathryn",
                            LastName = "Cormier",
                            RegisteredAt = new DateTime(2021, 1, 1, 12, 43, 33, 542, DateTimeKind.Local).AddTicks(988),
                            TeamId = 2
                        },
                        new
                        {
                            Id = 10,
                            BirthDay = new DateTime(1960, 5, 24, 12, 49, 5, 311, DateTimeKind.Unspecified).AddTicks(1208),
                            Email = "Kenny.Pagac@gmail.com",
                            FirstName = "Kenny",
                            LastName = "Pagac",
                            RegisteredAt = new DateTime(2023, 6, 14, 20, 39, 21, 33, DateTimeKind.Local).AddTicks(8440),
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.User", "Author")
                        .WithMany("Projects")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("BSATask.DAL.Entities.Team", "Team")
                        .WithMany("Projects")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Author");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Task", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.User", "Performer")
                        .WithMany("Tasks")
                        .HasForeignKey("PerformerId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("BSATask.DAL.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Performer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.HasOne("BSATask.DAL.Entities.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.Team", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BSATask.DAL.Entities.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
